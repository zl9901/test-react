{"ast":null,"code":"var _jsxFileName = \"/Users/zhuoliu/task-tracker-app/src/components/TaskTrackerList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TaskFormik from './TaskFormik';\nimport { addTask, deleteTask } from '../actions/TaskAction';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskTrackerList(props) {\n  _s();\n\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks);\n\n  const addNewTask = task => {\n    dispatch(addTask(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border border-2 border-dark rounded p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Task Tracker\", !showTaskForm ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-1\",\n        style: {\n          float: 'right'\n        },\n        onClick: () => {\n          setShowTaskForm(true);\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mt-1\",\n        style: {\n          float: 'right'\n        },\n        onClick: () => {\n          setShowTaskForm(false);\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), showTaskForm && /*#__PURE__*/_jsxDEV(TaskFormik, {\n      addNewTask: addNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), !tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"No Task To Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: tasks.map((task, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [task['task'], /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn badge badge-danger\",\n              style: {\n                float: 'right'\n              },\n              onClick: () => dispatch(deleteTask(idx)),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task['reminder'] ? task['dayTime'] + ' | ' + 'Reminder' : task['dayTime']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskTrackerList, \"oqv7mhUwxuxAqArND7/AF+grw0c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TaskTrackerList;\nexport default TaskTrackerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskTrackerList\");","map":{"version":3,"sources":["/Users/zhuoliu/task-tracker-app/src/components/TaskTrackerList.js"],"names":["useState","TaskFormik","addTask","deleteTask","useDispatch","useSelector","TaskTrackerList","props","showTaskForm","setShowTaskForm","dispatch","tasks","state","addNewTask","task","float","length","map","idx","fontWeight"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,uBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMU,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;;AAEA,QAAME,UAAU,GAAIC,IAAD,IAAU;AACzBJ,IAAAA,QAAQ,CAACR,OAAO,CAACY,IAAD,CAAR,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA,4BACI;AAAA,iCACM,CAACN,YAAD,gBACE;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,KAAK,EAAE;AAACO,UAAAA,KAAK,EAAE;AAAR,SAFX;AAGI,QAAA,OAAO,EAAE,MAAM;AACXN,UAAAA,eAAe,CAAC,IAAD,CAAf;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBASE;AACI,QAAA,SAAS,EAAC,qBADd;AAEI,QAAA,KAAK,EAAE;AAACM,UAAAA,KAAK,EAAE;AAAR,SAFX;AAGI,QAAA,OAAO,EAAE,MAAM;AACXN,UAAAA,eAAe,CAAC,KAAD,CAAf;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAqBMD,YAAY,iBACV,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEK;AAAxB;AAAA;AAAA;AAAA;AAAA,YAtBR,EAyBM,CAACF,KAAK,CAACK,MAAP,GAAc,CAAd,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACML,KAAK,CAACM,GAAN,CAAU,CAACH,IAAD,EAAOI,GAAP,KAAe;AACvB,4BACI;AAAI,UAAA,SAAS,EAAC,sBAAd;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAACC,cAAAA,UAAU,EAAE;AAAb,aAAX;AAAA,uBACKL,IAAI,CAAC,MAAD,CADT,eAEI;AACI,cAAA,SAAS,EAAC,wBADd;AAEI,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eAFX;AAGI,cAAA,OAAO,EAAE,MAAIL,QAAQ,CAACP,UAAU,CAACe,GAAD,CAAX,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI;AAAA,sBAAOJ,IAAI,CAAC,UAAD,CAAJ,GAAmBA,IAAI,CAAC,SAAD,CAAJ,GAAgB,KAAhB,GAAsB,UAAzC,GAAoDA,IAAI,CAAC,SAAD;AAA/D;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA,WAA0CI,GAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaH,OAdC;AADN;AAAA;AAAA;AAAA;AAAA,YA5BR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH;;GA1DQZ,e;UAEYF,W,EACHC,W;;;KAHTC,e;AA4DT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\nimport TaskFormik from './TaskFormik';\nimport { addTask, deleteTask } from '../actions/TaskAction';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nfunction TaskTrackerList(props) {\n    const [showTaskForm, setShowTaskForm] = useState(false);\n    const dispatch = useDispatch();\n    const tasks = useSelector(state => state.tasks);\n\n    const addNewTask = (task) => {\n        dispatch(addTask(task));\n    }\n\n    return (\n        <div className=\"border border-2 border-dark rounded p-3\">\n            <h2>Task Tracker \n                { !showTaskForm ? \n                    <button \n                        className=\"btn btn-success mt-1\" \n                        style={{float: 'right'}} \n                        onClick={() => {\n                            setShowTaskForm(true);\n                        }}\n                    >Add</button>\n                    :\n                    <button \n                        className=\"btn btn-danger mt-1\" \n                        style={{float: 'right'}} \n                        onClick={() => {\n                            setShowTaskForm(false);\n                        }}\n                    >Close</button>\n                }\n            </h2>\n\n            { showTaskForm && \n                <TaskFormik addNewTask={addNewTask}></TaskFormik> \n            }  \n            \n            { !tasks.length>0 ?\n                <span>No Task To Show</span>\n                :\n                <ul className=\"list-group\">\n                    { tasks.map((task, idx) => {\n                        return (        \n                            <li className=\"list-group-item my-1\" key={idx}>\n                                <h5 style={{fontWeight: 'bold'}}>\n                                    {task['task']} \n                                    <button \n                                        className=\"btn badge badge-danger\" \n                                        style={{float: 'right'}}\n                                        onClick={()=>dispatch(deleteTask(idx))}\n                                        >X</button>\n                                </h5>\n                                <span>{task['reminder'] ? task['dayTime']+' | '+'Reminder':task['dayTime']}</span>\n                            </li>\n                        );\n                    })}\n                </ul>\n            }\n        </div>  \n    );\n}\n  \nexport default TaskTrackerList;"]},"metadata":{},"sourceType":"module"}